{"version":3,"file":"static/js/641.285b1082.chunk.js","mappings":"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","sources":["components/transactionLookup/TransactionDetails.tsx","pages/TransactionLookup.tsx","../node_modules/react-bootstrap/esm/Badge.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import React, {FC} from \"react\";\nimport {Badge, Card, Col, Row} from \"react-bootstrap\";\nimport {FaCopy, FaExternalLinkAlt} from \"react-icons/fa\";\nimport {TransactionData} from \"../../pages/TransactionLookup\";\nimport {copyToClipboard, formatDateTime, formatKaspa, openTransaction} from \"../../services/Helper\";\nimport {Link} from \"react-router-dom\";\nimport {ExpandableDiv} from \"nacho-component-library\";\n\ntype TransactionDetails = {\n    data: TransactionData['commitData']\n    title: string\n}\nexport const TransactionDetails: FC<TransactionDetails> = (\n    {\n        data,\n        title\n    }\n) => (\n    <div className=\"mb-4\">\n        <ExpandableDiv title={title}>\n            <Card className=\"mb-3\">\n                <Card.Body>\n                    <Row className=\"mb-2\">\n                        <Col sm={4}><strong>Transaction ID</strong></Col>\n                        <Col sm={8}>\n                <span className=\"clickable\" onClick={() => openTransaction(data.transaction_id)}>\n                  {data.transaction_id} <FaExternalLinkAlt/>\n                </span>\n                            <FaCopy className=\"ms-2 clickable\"\n                                    onClick={() => copyToClipboard(data.transaction_id)}/>\n                        </Col>\n                    </Row>\n                    <Row className=\"mb-2\">\n                        <Col sm={4}><strong>Block Time</strong></Col>\n                        <Col sm={8}>{formatDateTime(data.block_time)}</Col>\n                    </Row>\n                    <Row className=\"mb-2\">\n                        <Col sm={4}><strong>Status</strong></Col>\n                        <Col sm={8}>\n                            <Badge bg={data.is_accepted ? \"success\" : \"danger\"} className=\"me-2\">\n                                {data.is_accepted ? \"Accepted\" : \"Not Accepted\"}\n                            </Badge>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm={4}><strong>Block Blue Score</strong></Col>\n                        <Col sm={8}>{data.accepting_block_blue_score}</Col>\n                    </Row>\n                </Card.Body>\n            </Card>\n\n            <TransactionInputsOutputs data={data.inputs} title={'Inputs'}/>\n            <TransactionInputsOutputs data={data.outputs} title={'Outputs'}/>\n        </ExpandableDiv>\n    </div>\n);\n\ntype TransactionInputsOutputs = {\n    data: Record<string, string>[]\n    title: string\n}\nconst TransactionInputsOutputs: FC<TransactionInputsOutputs> = (\n    {\n        data,\n        title\n    }\n) => (\n    <ExpandableDiv title={<span className=\"ms-2\"><strong>{title}</strong> ({data.length})</span>}>\n        {data.map((item, index) => (\n            <Card key={index} className=\"mb-3\">\n                <Card.Body>\n                    {item.previous_outpoint_hash && (\n                        <Row className=\"mb-2\">\n                            <Col sm={4}><strong>Previous Outpoint Hash</strong></Col>\n                            <Col sm={8}>\n                                <Link to={`/wallet/${item.previous_outpoint_hash}`} className={'clickable-address'}>\n                                    {item.previous_outpoint_hash}\n                                </Link>\n                            </Col>\n                        </Row>\n                    )}\n                    {item.signature_script && (\n                        <Row className=\"mb-2\">\n                            <Col sm={4}><strong>Signature Script</strong></Col>\n                            <Col sm={8}>\n                                <div className=\"signature-script\">\n                                    <span className=\"script-text\">{item.signature_script}</span>\n                                    <FaCopy\n                                        className=\"ms-2 clickable\"\n                                        onClick={() => copyToClipboard(item.signature_script)}\n                                    />\n                                </div>\n                            </Col>\n                        </Row>\n                    )}\n                    {item.script_public_key_address && (\n                        <Row className=\"mb-2\">\n                            <Col sm={4}><strong>Address</strong></Col>\n                            <Col sm={8}>\n                                <Link to={`/wallet/${item.script_public_key_address}`}\n                                      className={'clickable-address'}>\n                                    {item.script_public_key_address}\n                                </Link>\n                            </Col>\n                        </Row>\n                    )}\n                    {item.amount && (\n                        <Row>\n                            <Col sm={4}><strong>Amount</strong></Col>\n                            <Col sm={8}>{formatKaspa(item.amount)}</Col>\n                        </Row>\n                    )}\n                </Card.Body>\n            </Card>\n        ))}\n    </ExpandableDiv>\n);","import React, {FC, useEffect, useState} from 'react';\nimport {Link, useNavigate, useParams} from 'react-router-dom';\nimport {Col, Container, Row} from 'react-bootstrap';\nimport {FaArrowRight, FaExternalLinkAlt} from 'react-icons/fa';\nimport '../styles/TransactionLookup.css';\nimport {Input, JsonLd, LoadingSpinner, NormalCard, Page, SEO, simpleRequest} from \"nacho-component-library\";\nimport {OpTransactionData} from \"../interfaces/OpTransactionData\";\nimport {Transaction} from \"../interfaces/Transaction\";\nimport {ResultResponse} from \"../interfaces/ApiResponseTypes\";\nimport {TransactionDetails} from \"../components/transactionLookup/TransactionDetails\";\nimport {formatKaspa, formatKRC20Amount} from \"../services/Helper\";\nimport {addAlert} from \"../components/alerts/Alerts\";\n\nexport type TransactionData = {\n    krc20Data: OpTransactionData\n    revealData: Transaction\n    commitData: {\n        outputs: { script_public_key_address: string }[]\n        transaction_id: string\n        accepting_block_blue_score: string\n        is_accepted: boolean\n        inputs: Record<string, string>[]\n        block_time: string\n    }\n}\n\nconst jsonData = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebApplication\",\n    \"name\": \"KatScan Transaction Lookup\",\n    \"description\": \"Explore detailed information about KRC-20 token transactions on the Kaspa blockchain.\",\n    \"url\": \"https://katscan.xyz/transaction-lookup\"\n}\n\nconst TransactionLookup: FC = () => {\n\n    const {hashRev} = useParams();\n    const [transactionHash, setTransactionHash] = useState(hashRev ?? '');\n    const [transactionData, setTransactionData] = useState<TransactionData | null>(null);\n    const [loading, setLoading] = useState(false);\n    const navigate = useNavigate();\n\n    const fetchTransactionData = (hash: string): void => {\n        if (!hash) return;\n        setLoading(true);\n        try {\n            void simpleRequest<ResultResponse<OpTransactionData[]>>(`https://api.kasplex.org/v1/krc20/op/${hash}`)\n                .then(async (krc20Response) => {\n                    const revealData = await simpleRequest<Transaction>(`https://api.kaspa.org/transactions/${hash}`)\n\n                    if (!revealData) {\n                        return\n                    }\n\n                    const krc20Data = krc20Response.result[0];\n\n                    const commitHash = revealData.inputs?.[0].previous_outpoint_hash;\n                    const commitData = await simpleRequest<TransactionData['commitData']>(`https://api.kaspa.org/transactions/${commitHash ?? ''}`);\n\n                    setTransactionData({krc20Data, revealData, commitData});\n                }).catch(e => {\n                    console.log(e)\n                    addAlert('error', \"Looks like we don't found the transaction, we're working on it!\")\n                });\n        } catch (err) {\n            console.error('Failed to fetch transaction data:', err);\n            addAlert('error', 'Failed to fetch transaction data. Please check the transaction hash and try again.');\n        } finally {\n            setLoading(false);\n        }\n    }\n\n\n    useEffect(() => {\n        if (hashRev) {\n            setTransactionHash(hashRev);\n            void fetchTransactionData(hashRev);\n        }\n    }, [hashRev]);\n\n    const handleSubmit = (transactionHash: string): void => {\n        if (transactionHash) {\n            navigate(`/transaction-lookup/${transactionHash}`);\n        }\n    };\n\n    const openExplorerForP2SH = (address: string): void => {\n        window.open(`https://explorer.kaspa.org/addresses/${address}`, '_blank', 'noopener,noreferrer');\n    };\n\n    const capitalizeFirstLetter = (string: string): string => {\n        return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n    };\n\n    return (\n        <Page header={'Transaction Lookup'}>\n            <Container className=\"transaction-lookup\">\n                <SEO\n                    title=\"Transaction Lookup\"\n                    description=\"Explore detailed information about KRC-20 token transactions on the Kaspa blockchain.\"\n                    keywords=\"KRC-20, Kaspa, transaction lookup, blockchain explorer, token transfers\"\n                />\n                <JsonLd\n                    data={jsonData}\n                />\n\n                <Input customClass={'mb-3'}\n                       onSubmit={handleSubmit}\n                       placeholder={'Enter transaction hash'}\n                       value={transactionHash}\n                       onChangeCallback={setTransactionHash}/>\n\n                {loading && <LoadingSpinner/>}\n\n                {transactionData && (\n                    <div className=\"transaction-details\">\n                        <NormalCard title={'KRC-20 Operation Overview'} titleProps={{as: 'h5'}}>\n                            <Row className=\"mb-2\">\n                                <Col sm={4}><strong>Operation</strong></Col>\n                                <Col sm={8}>{capitalizeFirstLetter(transactionData.krc20Data.op)}</Col>\n                            </Row>\n                            <Row className=\"mb-2\">\n                                <Col sm={4}><strong>Token</strong></Col>\n                                <Col sm={8}>{transactionData.krc20Data.tick}</Col>\n                            </Row>\n                            <Row className=\"mb-2\">\n                                <Col sm={4}><strong>Amount</strong></Col>\n                                <Col\n                                    sm={8}>{formatKRC20Amount(transactionData.krc20Data.amt, 8, transactionData.krc20Data.tick)}</Col>\n                            </Row>\n                            <Row className=\"mb-2\">\n                                <Col sm={4}><strong>P2SH Address</strong></Col>\n                                <Col sm={8}>\n                  <span className=\"clickable-address\"\n                        onClick={() => openExplorerForP2SH(transactionData.commitData.outputs[0].script_public_key_address)}>\n                    {transactionData.commitData.outputs[0].script_public_key_address}\n                      <FaExternalLinkAlt className=\"ms-2\"/>\n                  </span>\n                                </Col>\n                            </Row>\n                            <Row className=\"mb-2\">\n                                <Col sm={4}><strong>Wallet Address</strong></Col>\n                                <Col sm={8}>\n                                    <Link to={`/wallet/${transactionData.krc20Data.to}`}\n                                          className={'clickable-address'}>\n                                        {transactionData.krc20Data.to}\n                                    </Link>\n                                </Col>\n                            </Row>\n                            <Row className=\"mb-2\">\n                                <Col sm={4}><strong>Transaction Fee</strong></Col>\n                                <Col sm={8}>{formatKaspa(transactionData.krc20Data.feeRev)}</Col>\n                            </Row>\n                            <Row>\n                                <Col sm={4}><strong>Operation Score</strong></Col>\n                                <Col sm={8}>{transactionData.krc20Data.opScore}</Col>\n                            </Row>\n                        </NormalCard>\n\n                        <div className=\"transaction-flow mb-4\">\n                            <div className=\"commit-transaction\">\n                                <h6>Commit Transaction</h6>\n                                <p>{transactionData.commitData.transaction_id}</p>\n                            </div>\n                            <FaArrowRight className=\"flow-arrow\"/>\n                            <div className=\"reveal-transaction\">\n                                <h6>Reveal Transaction</h6>\n                                <p>{transactionData.revealData.transaction_id}</p>\n                            </div>\n                        </div>\n                        <TransactionDetails data={transactionData.commitData}\n                                            title={\"Commit Transaction Details\"}/>\n                    </div>\n                )}\n            </Container>\n        </Page>\n    );\n};\n\nexport default TransactionLookup;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg = 'primary',\n  pill = false,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nexport default Badge;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["TransactionDetails","_ref","data","title","_jsx","className","children","_jsxs","ExpandableDiv","Card","Body","Row","Col","sm","onClick","openTransaction","transaction_id","FaExternalLinkAlt","FaCopy","copyToClipboard","formatDateTime","block_time","Badge","bg","is_accepted","accepting_block_blue_score","TransactionInputsOutputs","inputs","outputs","_ref2","length","map","item","index","previous_outpoint_hash","Link","to","concat","signature_script","script_public_key_address","amount","formatKaspa","jsonData","TransactionLookup","hashRev","useParams","transactionHash","setTransactionHash","useState","transactionData","setTransactionData","loading","setLoading","navigate","useNavigate","useEffect","hash","simpleRequest","then","async","_revealData$inputs","revealData","krc20Data","krc20Response","result","commitHash","commitData","catch","e","console","log","addAlert","err","error","fetchTransactionData","Page","header","Container","SEO","description","keywords","JsonLd","Input","customClass","onSubmit","placeholder","value","onChangeCallback","LoadingSpinner","NormalCard","titleProps","as","string","op","charAt","toUpperCase","slice","toLowerCase","tick","formatKRC20Amount","amt","openExplorerForP2SH","address","window","open","feeRev","opScore","FaArrowRight","_excluded","React","ref","bsPrefix","pill","text","Component","props","_objectWithoutProperties","prefix","useBootstrapPrefix","_objectSpread","classNames","displayName","decoratedBsPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","propValue","cols","infix","push"],"sourceRoot":""}