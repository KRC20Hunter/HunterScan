{"version":3,"file":"static/js/533.5d8bf688.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/AlertHeading.js","../node_modules/react-bootstrap/esm/AlertLink.js","../node_modules/react-bootstrap/esm/Alert.js","components/tabs/tokendetail/HolderDistribution.tsx","components/tables/MobileOperationsTable.tsx","components/tabs/tokendetail/RecentOperations.tsx","components/tables/MobileHolderTable.tsx","components/tabs/tokendetail/TopHolder.tsx","components/TokenDetailsTokenInfo.tsx","pages/TokenDetail.tsx","services/dataService.ts","utils/censorTicker.ts"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'alert-heading');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nAlertHeading.displayName = 'AlertHeading';\nexport default AlertHeading;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AlertLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = Anchor,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'alert-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nAlertLink.displayName = 'AlertLink';\nexport default AlertLink;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AlertHeading from './AlertHeading';\nimport AlertLink from './AlertLink';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show = true,\n    closeLabel = 'Close alert',\n    closeVariant,\n    className,\n    children,\n    variant = 'primary',\n    onClose,\n    dismissible,\n    transition = Fade,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});","import React, {FC, useMemo} from \"react\";\nimport {parseRawNumber} from \"../../../services/Helper\";\nimport {TokenData, TokenHolder} from \"../../../interfaces/TokenData\";\nimport 'styles/tokendetail/HolderDistribution.css'\nimport {DivChart} from \"nacho-component-library\";\n\ntype Props = {\n    tokenData: TokenData | null\n    tokenHolder: TokenHolder[]\n}\n\nexport const HolderDistribution: FC<Props> = (\n    {\n        tokenData,\n        tokenHolder\n    }\n) => {\n    const holderDistribution = useMemo(() => {\n        if (tokenData === null) {\n            return []\n        }\n\n        if (tokenHolder.length === 0) {\n            return [\n                {\n                    label: 'Other Holders',\n                    percentage: 100,\n                }\n            ];\n        }\n        const holders = tokenHolder\n        const decimals = tokenData.dec\n        const maxSupply = tokenData.max\n\n        const groups = [\n            {label: 'Top 1-10 Holders', total: 0},\n            {label: 'Top 11-20 Holders', total: 0},\n            {label: 'Top 21-30 Holders', total: 0},\n            {label: 'Top 31-40 Holders', total: 0},\n            {label: 'Top 41-50 Holders', total: 0},\n        ];\n\n        holders.slice(0, 50).forEach((holder, index) => {\n            const groupIndex = Math.floor(index / 10);\n            groups[groupIndex].total += parseRawNumber(holder.balance, decimals);\n        });\n\n        const top50Total = groups.reduce((sum, group) => sum + group.total, 0);\n        const otherHoldersTotal = parseRawNumber(maxSupply.toString(), decimals) - top50Total;\n\n        return [\n            ...groups.map(group => ({\n                label: group.label,\n                percentage: (group.total / parseRawNumber(maxSupply.toString(), decimals)) * 100,\n            })),\n            {\n                label: 'Other Holders',\n                percentage: (otherHoldersTotal / parseRawNumber(maxSupply.toString(), decimals)) * 100,\n            }\n        ];\n    }, [tokenData, tokenHolder]);\n\n    return <div className=\"holder-distribution\">\n        <DivChart data={holderDistribution} groupLabel={'Holder Group'}/>\n    </div>\n}","import React, {FC} from \"react\";\nimport {TokenData} from \"../../interfaces/TokenData\";\nimport {OpTransactionData} from \"../../interfaces/OpTransactionData\";\nimport {LinkWithTooltip} from \"nacho-component-library\";\nimport {formatDateTime, formatNumber, parseRawNumber, shortenString} from \"../../services/Helper\";\nimport 'styles/components/MobileTable.css'\n\ntype MobileOperationsTable = {\n    data: OpTransactionData[]\n    tokenData: TokenData\n}\nexport const MobileOperationsTable: FC<MobileOperationsTable> = (\n    {\n        data,\n        tokenData\n    }\n) => {\n    return <div className=\"mobile-table\">\n        {data.map((item, index) => (\n            <div key={index} className=\"mobile-table-row\">\n                <div className=\"mobile-table-cell\">\n                    <strong>Type:</strong> {item.op}\n                </div>\n                <div className=\"mobile-table-cell\">\n                    <strong>Transaction ID:</strong>\n                    <LinkWithTooltip\n                        to={`/transaction-lookup/${item.hashRev}`}\n                        tooltip=\"View transaction details\"\n                        className=\"clickable-address\"\n                    >\n                        {shortenString(item.hashRev)}\n                    </LinkWithTooltip>\n                </div>\n                <div className=\"mobile-table-cell\">\n                    <strong>Address:</strong>\n                    <LinkWithTooltip\n                        to={`/wallet/${item.op === 'mint' ? item.to : item.from}`}\n                        tooltip=\"View wallet details\"\n                        className=\"clickable-address\"\n                    >\n                        {shortenString(item.op === 'mint' ? item.to : item.from)}\n                    </LinkWithTooltip>\n                </div>\n                <div className=\"mobile-table-cell\">\n                    <strong>Amount:</strong> {formatNumber(parseRawNumber(item.amt, tokenData.dec), tokenData.dec)}\n                </div>\n                <div className=\"mobile-table-cell\">\n                    <strong>Timestamp:</strong> {formatDateTime(item.mtsAdd)}\n                </div>\n            </div>\n        ))}\n    </div>\n}","import React, {Dispatch, FC, SetStateAction, useCallback, useEffect, useRef, useState} from \"react\";\nimport {MobileOperationsTable} from \"../../tables/MobileOperationsTable\";\nimport {formatDateTime, formatNumber, parseRawNumber} from \"../../../services/Helper\";\nimport {Table} from \"react-bootstrap\";\nimport {LinkWithTooltip, useMobile} from \"nacho-component-library\";\nimport {OpTransactionData} from \"../../../interfaces/OpTransactionData\";\nimport {TokenData} from \"../../../interfaces/TokenData\";\nimport {getTokenOperations} from \"../../../services/dataService\";\nimport {addAlert} from \"../../alerts/Alerts\";\n\ntype Props = {\n    tokenData: TokenData\n    tokenId: string | undefined\n    operations: OpTransactionData[]\n    setOperations: Dispatch<SetStateAction<OpTransactionData[]>>\n    operationsCursor: number | null\n    setOperationsCursor: Dispatch<SetStateAction<number | null>>\n}\n\nexport const RecentOperations: FC<Props> = (\n    {\n        tokenData,\n        tokenId,\n        operations,\n        setOperations,\n        operationsCursor,\n        setOperationsCursor\n    }\n) => {\n    const {isMobile} = useMobile()\n\n    const [loadingMore, setLoadingMore] = useState(false);\n    const observer = useRef<IntersectionObserver>();\n\n    useEffect(() => {\n        if (tokenId === null || tokenId === undefined || operations.length !== 0) {\n            return\n        }\n\n        getTokenOperations(tokenId, 50)\n            .then((opsData) => {\n                setOperations(opsData.result);\n                setOperationsCursor(opsData.next);\n            })\n            .catch(err => {\n                console.error('Failed to fetch operations:', err);\n                addAlert('error', 'Failed to fetch operation details');\n            })\n    }, [operations.length, setOperations, setOperationsCursor, tokenId])\n\n    const fetchOperations = useCallback(async () => {\n        if (loadingMore || !operationsCursor || tokenId === undefined) return;\n        try {\n            setLoadingMore(true);\n            const data = await getTokenOperations(tokenId, 50, operationsCursor);\n            setOperations(prevOps => [...prevOps, ...data.result]);\n            setOperationsCursor(data.next);\n        } catch (err) {\n            console.error('Failed to fetch operations:', err);\n            addAlert('error', 'Failed to load more operations. Please try again.');\n        } finally {\n            setLoadingMore(false);\n        }\n    }, [loadingMore, operationsCursor, tokenId, setOperations, setOperationsCursor]);\n\n    const lastOperationElementRef = useCallback((node: HTMLTableRowElement) => {\n        if (loadingMore) return;\n        if (observer.current) observer.current.disconnect();\n        observer.current = new IntersectionObserver(entries => {\n            if (entries[0].isIntersecting && operationsCursor) {\n                void fetchOperations();\n            }\n        });\n        if (node) observer.current?.observe(node);\n    }, [loadingMore, operationsCursor, fetchOperations]);\n\n    return <>\n        <div className=\"detail-table-container\" style={{height: '100%'}}>\n            {isMobile ? (\n                <MobileOperationsTable\n                    data={operations}\n                    tokenData={tokenData}\n                />\n            ) : (\n                <Table striped bordered hover>\n                    <thead>\n                    <tr>\n                        <th>Type</th>\n                        <th>Transaction ID</th>\n                        <th>Address</th>\n                        <th>Amount</th>\n                        <th>Timestamp</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {operations.map((op, index) => (\n                        <tr key={index}\n                            ref={index === operations.length - 1 ? lastOperationElementRef : null}>\n                            <td>{op.op}</td>\n                            <td>\n                                <LinkWithTooltip\n                                    to={`/transaction-lookup/${op.hashRev}`}\n                                    tooltip=\"View transaction details\"\n                                    className=\"clickable-address\"\n                                >\n                                    {op.hashRev}\n                                </LinkWithTooltip>\n                            </td>\n                            <td>\n                                <LinkWithTooltip\n                                    to={`/wallet/${op.op === 'mint' ? op.to : op.from}`}\n                                    tooltip=\"View wallet details\"\n                                    className=\"clickable-address\"\n                                >\n                                    {op.op === 'mint' ? op.to : op.from}\n                                </LinkWithTooltip>\n                            </td>\n                            <td>{formatNumber(parseRawNumber(op.amt, tokenData.dec), tokenData.dec)}</td>\n                            <td>{formatDateTime(op.mtsAdd)}</td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </Table>\n            )}\n        </div>\n        {loadingMore && <div>Loading more operations...</div>}\n        {!operationsCursor && !loadingMore && <div>No more operations to load.</div>}\n    </>\n}","import React, {FC} from \"react\";\nimport {TokenData, TokenHolder} from \"../../interfaces/TokenData\";\nimport {LinkWithTooltip} from \"nacho-component-library\";\nimport {formatNumber, parseRawNumber, shortenString} from \"../../services/Helper\";\nimport 'styles/components/MobileTable.css'\n\ntype MobileHolderTable = {\n    data: TokenHolder[];\n    tokenData: TokenData;\n}\n\nexport const MobileHolderTable: FC<MobileHolderTable> = (\n    {\n        data,\n        tokenData,\n    }\n) => {\n    return <div className=\"mobile-table\">\n        {data.map((item, index) => (\n            <div key={index} className=\"mobile-table-row\">\n                <>\n                    <div className=\"mobile-table-cell\">\n                        <strong>Rank:</strong> {index + 1}\n                    </div>\n                    <div className=\"mobile-table-cell\">\n                        <strong>Address:</strong>\n                        <LinkWithTooltip\n                            to={`/wallet/${item.address}`}\n                            tooltip=\"View wallet details\"\n                            className=\"clickable-address\"\n                        >\n                            {shortenString(item.address)}\n                        </LinkWithTooltip>\n                    </div>\n                    <div className=\"mobile-table-cell\">\n                        <strong>Amount:</strong> {formatNumber(parseRawNumber(item.balance, tokenData.dec), tokenData.dec)}\n                    </div>\n                    <div className=\"mobile-table-cell\">\n                        <strong>% of Total Supply:</strong>\n                        {((parseRawNumber(item.balance, tokenData.dec) / parseRawNumber(tokenData.max, tokenData.dec)) * 100).toFixed(2)}%\n                    </div>\n                </>\n            </div>\n        ))}\n    </div>\n}","import React, {Dispatch, FC, ReactElement, SetStateAction, useEffect} from \"react\";\nimport {MobileHolderTable} from \"../../tables/MobileHolderTable\";\nimport {formatNumber, parseRawNumber} from \"../../../services/Helper\";\nimport {LinkWithTooltip, List, useMobile} from \"nacho-component-library\";\nimport {TokenData, TokenHolder} from \"../../../interfaces/TokenData\";\nimport 'styles/components/MobileTable.css'\nimport {useFetch} from \"../../../hooks/useFetch\";\n\ntype Props = {\n    tokenData: TokenData\n    holderData: TokenHolder[]\n    setHolderData: Dispatch<SetStateAction<TokenHolder[]>>\n}\n\nexport const TopHolder: FC<Props> = (\n    {\n        tokenData,\n        holderData,\n        setHolderData\n    }\n) => {\n\n    const {isMobile} = useMobile()\n    const {data, loading} = useFetch<TokenHolder[]>({\n        url: `/token/holder/${tokenData.tick}`,\n        avoidLoading: holderData?.length !== 0,\n        defaultValue: holderData as never[]\n    })\n\n    useEffect(() => {\n        if (data.length === 0){\n            return\n        }\n        setHolderData(data)\n    }, [data, setHolderData]);\n\n    const getHeader = (header: string): ReactElement => {\n        switch (header) {\n            case 'balance':\n                return <div>AMOUNT</div>\n            default:\n                return <div>{header.toUpperCase()}</div>\n        }\n    }\n    const getElement = (header: string, item: TokenHolder, index: number): ReactElement => {\n        switch (header) {\n            case \"rank\":\n                return <div>{index + 1}</div>\n            case 'address':\n                return <LinkWithTooltip\n                    to={`/wallet/${item.address}`}\n                    tooltip=\"View wallet details\"\n                    className=\"clickable-address\">\n                    {item.address}\n                </LinkWithTooltip>\n            case 'balance':\n                return <div>{formatNumber(parseRawNumber(item.balance, tokenData.dec), tokenData.dec)}</div>\n            case '% of Total Supply':\n                return <div>{((parseRawNumber(item.balance, tokenData.dec) / parseRawNumber(tokenData.max, tokenData.dec)) * 100).toFixed(2)}%</div>\n            default:\n                return <div>{item[header as keyof TokenHolder]}</div>\n        }\n    }\n    return <>\n        <div className=\"detail-table-container\">\n            {isMobile ? (\n                <MobileHolderTable\n                    data={holderData}\n                    tokenData={tokenData}\n                />\n            ) : (\n                <List isLoading={loading}\n                      headerElements={['rank', 'address', 'balance', '% of Total Supply']}\n                      gridTemplate={'0.5fr 4fr 2fr 1fr'}\n                      getHeader={getHeader}\n                      minItemHeight={30}\n                      getElement={getElement}\n                      items={data}/>\n            )}\n        </div>\n        <p className=\"mt-3 text-muted\">\n            Note: Only top holders are displayed. The total number of holders\n            is {formatNumber(tokenData.holderTotal, 0)}.\n        </p>\n    </>\n}","import React, {FC} from \"react\";\nimport {Card} from \"react-bootstrap\";\nimport {SmallThumbnail, Thumbnail} from \"nacho-component-library\";\nimport {katscanStaticUrl} from \"../utils/StaticVariables\";\nimport {formatNumber, parseRawNumber} from \"../services/Helper\";\nimport {Link} from \"react-router-dom\";\nimport {TokenData} from \"../interfaces/TokenData\";\nimport {Socials} from \"../pages/TokenDetail\";\nimport {FaImages} from \"react-icons/fa6\";\n\ninterface Props {\n    tokenData: TokenData\n    socials: Socials\n}\n\nexport const TokenDetailsTokenInfo: FC<Props> = (\n    {\n        tokenData,\n        socials\n    }\n) => {\n\n    const getIcon = (type: string) => {\n        switch (type) {\n            case 'twitter':\n                return <SmallThumbnail src={`${katscanStaticUrl}/twitter.svg`} alt={'twitter'}/>\n            case 'discord':\n                return <SmallThumbnail src={`${katscanStaticUrl}/discord.svg`} alt={'discord'}/>\n            case 'telegram':\n                return <SmallThumbnail src={`${katscanStaticUrl}/telegram.svg`} alt={'telegram'}/>\n            default:\n                if (tokenData.logo === null) {\n                    return <FaImages className={'small-thumbnail-image'}/>\n                }\n                return <SmallThumbnail\n                    src={`${katscanStaticUrl}/thumbnails${tokenData.logo}`}\n                    alt={'website'}/>\n        }\n    }\n\n    return <Card className=\"token-info-card\">\n        <Card.Body>\n            <div className=\"token-info-grid\">\n                <div className=\"token-info-item-image\">\n                    {tokenData.logo ?\n                        <Thumbnail src={`${katscanStaticUrl}/logos${tokenData.logo}`} alt={`${tokenData.tick}.jpg`}/>\n                        : <FaImages className={'thumbnail-image'} style={{height:'fit-content', borderRadius: 'unset'}}/>\n                    }\n                </div>\n                <div className=\"token-info-item\">\n                    <span className=\"token-info-label\">Max Supply</span>\n                    <span\n                        className=\"token-info-value\">{formatNumber(parseRawNumber(tokenData.max, tokenData.dec), tokenData.dec)}</span>\n                </div>\n                <div className=\"token-info-item\">\n                    <span className=\"token-info-label\">Total Minted</span>\n                    <span\n                        className=\"token-info-value\">{formatNumber(parseRawNumber(tokenData.minted, tokenData.dec), tokenData.dec)}</span>\n                </div>\n                <div className=\"token-info-item\">\n                    <span className=\"token-info-label\">Limit per Mint</span>\n                    <span\n                        className=\"token-info-value\">{formatNumber(parseRawNumber(tokenData.lim, tokenData.dec), tokenData.dec)}</span>\n                </div>\n                <div className=\"token-info-item\">\n                    <span className=\"token-info-label\">Total Mints</span>\n                    <span className=\"token-info-value\">{formatNumber(tokenData.mintTotal, 0)}</span>\n                </div>\n                <div className=\"token-info-item\">\n                    <span className=\"token-info-label\">Total Holders</span>\n                    <span className=\"token-info-value\">{formatNumber(tokenData.holderTotal, 0)}</span>\n                </div>\n                <div className=\"token-info-item\">\n                    <span className=\"token-info-label\">Total Transfers</span>\n                    <span className=\"token-info-value\">{formatNumber(tokenData.transferTotal, 0)}</span>\n                </div>\n                <div className=\"token-info-socials\">\n                    <span className=\"token-info-label\">Socials</span>\n                    <div className={'token-info-socials-wrapper'}>\n                        {Object.entries(socials).map(([type, url]) =>\n                            <Link key={type} to={url} target={'_blank'} referrerPolicy={'no-referrer'} title={url}>\n                                {getIcon(type)}\n                            </Link>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </Card.Body>\n    </Card>\n}","import React, {FC, useEffect, useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport {Alert} from 'react-bootstrap';\nimport 'styles/TokenDetail.css';\nimport {censorTicker} from '../utils/censorTicker';\nimport {TokenData, TokenHolder} from \"../interfaces/TokenData\";\nimport {formatDateTime} from \"../services/Helper\";\nimport {HolderDistribution} from \"../components/tabs/tokendetail/HolderDistribution\";\nimport {RecentOperations} from \"../components/tabs/tokendetail/RecentOperations\";\nimport {TopHolder} from \"../components/tabs/tokendetail/TopHolder\";\n// import {MintActivity, MintOvertimeType} from \"../components/tabs/tokendetail/MintActivity\";\nimport {OpTransactionData} from \"../interfaces/OpTransactionData\";\nimport {TokenListResponse} from \"../interfaces/ApiResponseTypes\";\nimport {CustomTabs, JsonLd, LoadingSpinner, Page, SEO, useMobile} from \"nacho-component-library\";\nimport {TokenDetailsTokenInfo} from \"../components/TokenDetailsTokenInfo\";\nimport {useFetch} from \"../hooks/useFetch\";\nimport {katscanApiUrl} from \"../utils/StaticVariables\";\n\nexport type Socials = Record<string, string>\n\nconst titles = ['Top Holders', 'Recent Operations', 'Holder Distribution']\nconst mobileTabs = ['General Info', 'Additional Info']\n\nconst TokenDetail: FC = () => {\n        const {tokenId} = useParams();\n        const [holderData, setHolderData] = useState<TokenHolder[]>([]);\n        const {isMobile} = useMobile()\n        // const [mintActivity, setMintActivity] = useState<MintOvertimeType[]>([]);\n        const [operations, setOperations] = useState<OpTransactionData[]>([]);\n        const [operationsCursor, setOperationsCursor] = useState<TokenListResponse<OpTransactionData[]>['next'] | null>(null);\n        const [socials, setSocials] = useState<Socials>({})\n        if (!isMobile) {\n            // disable until endpoint done\n            // titles[3] = 'Mint Activity'\n        }\n        const {data, loading} = useFetch<TokenData>({\n            url: `${katscanApiUrl}/token/detail/${tokenId ?? ''}`,\n            avoidLoading: !tokenId,\n            defaultValue: null,\n            errorMessage: 'Failed to fetch token details, is the TICK correct?'\n        })\n\n        useEffect(() => {\n            if (!data || !tokenId) {\n                return\n            }\n\n            if (!data) {\n                throw new Error('No data returned from API');\n            }\n\n            setSocials((data.socials ? JSON.parse(data.socials) : {}) as Socials)\n\n        }, [data, tokenId]);\n\n        if (loading) return <LoadingSpinner/>\n        if (!data) return <Alert variant=\"warning\">No data available</Alert>;\n\n        const jsonLdData = {\n            \"@context\": \"https://schema.org\",\n            \"@type\": \"WebPage\",\n            \"name\": `${data.tick} Token Details | KatScan`,\n            \"description\": `Detailed information about the KRC-20 token ${data.tick} on the Kaspa blockchain.`,\n            \"url\": `https://katscan.xyz/tokens/${tokenId ?? ''}`,\n        };\n\n        return (\n            <Page header={`Token Details: ${censorTicker(data.tick)}`}\n                  additionalHeaderComponent={<span className=\"creation-date\">\n                    Deployed on {formatDateTime(data.mtsAdd)}\n                </span>}>\n                <div className=\"token-detail\">\n                    <JsonLd data={jsonLdData}/>\n                    <SEO\n                        title=\"Token Details\"\n                        description=\"Explore detailed information about a specific KRC-20 token on the Kaspa blockchain.\"\n                        keywords=\"KRC-20, Kaspa, token details, blockchain explorer, token information\"\n                    />\n\n                    {isMobile\n                        ?\n                        <CustomTabs titles={mobileTabs}>\n                            <TokenDetailsTokenInfo tokenData={data} socials={socials}/>\n                            <CustomTabs titles={titles}>\n                                <TopHolder tokenData={data} holderData={holderData} setHolderData={setHolderData}/>\n                                <RecentOperations tokenData={data}\n                                                  tokenId={tokenId}\n                                                  setOperations={setOperations}\n                                                  operations={operations}\n                                                  operationsCursor={operationsCursor}\n                                                  setOperationsCursor={setOperationsCursor}/>\n                                <HolderDistribution tokenData={data} tokenHolder={holderData}/>\n                            </CustomTabs>\n                        </CustomTabs>\n                        : <>\n                            <TokenDetailsTokenInfo tokenData={data} socials={socials}/>\n                            <CustomTabs titles={titles}>\n                                <TopHolder tokenData={data} holderData={holderData} setHolderData={setHolderData}/>\n                                <RecentOperations tokenData={data}\n                                                  tokenId={tokenId}\n                                                  setOperations={setOperations}\n                                                  operations={operations}\n                                                  operationsCursor={operationsCursor}\n                                                  setOperationsCursor={setOperationsCursor}/>\n                                <HolderDistribution tokenData={data} tokenHolder={holderData}/>\n                                {/*{!isMobile && <MintActivity tokenData={tokenData} mintActivityData={mintActivity}*/}\n                                {/*                            setMintActivityData={setMintActivity}/>}*/}\n                            </CustomTabs>\n                        </>}\n\n                </div>\n            </Page>\n        );\n    }\n;\n\n\nexport default TokenDetail;","import {TokenData, TokenHolder} from \"../interfaces/TokenData\";\nimport {sendRequest, simpleRequest} from \"nacho-component-library\";\nimport {\n    KatscanResponse,\n    KatscanTokenListResponse,\n    ResultResponse,\n    TokenListResponse\n} from \"../interfaces/ApiResponseTypes\";\nimport {OpTransactionData} from \"../interfaces/OpTransactionData\";\nimport {katscanApiUrl} from \"../utils/StaticVariables\";\n\nconst BASE_URL = 'https://api.kasplex.org/v1';\n\n// Simulating an API call to fetch token details\nexport const getTokenDetails = async (tick: string): Promise<KatscanResponse<TokenHolder>> => {\n    try {\n        return await simpleRequest<KatscanResponse<TokenHolder>>(`${katscanApiUrl}/token/detail/${tick}`)\n    } catch (error) {\n        console.error('Error fetching token details:', error);\n        throw error;\n    }\n};\n\n// New function to fetch KRC-20 token list\nexport const getKRC20TokenList = async (limit = 100, sortField = 'holderTotal', sortDirection = 'desc'): Promise<{\n    result: TokenData[]\n}> => {\n    let allTokens: TokenData[] = [];\n    let cursor = null;\n\n    do {\n        const params: Record<string, string | number> = {\n            limit,\n            sortBy: sortField,\n            sortOrder: sortDirection,\n            ...(cursor && {cursor: cursor})\n        };\n\n        try {\n            const response = await sendRequest<KatscanTokenListResponse<TokenData[]>>({\n                method: 'GET',\n                url: `${katscanApiUrl}/token/tokenlist`,\n                params\n            });\n            allTokens = [...allTokens, ...response.result];\n            cursor = response.nextCursor;\n        } catch (error) {\n            console.error('Error fetching KRC20 token list:', error);\n            throw new Error(`Failed to fetch token list: ${(error as Record<string, string>).message}`);\n        }\n    } while (cursor);\n\n    return {result: allTokens};\n};\n\n// New function to fetch KRC-20 token list\nexport const getKRC20TokenListSequential = async (limit = 100, sortField = 'holderTotal', sortDirection = 'desc', cursor: string | null): Promise<{\n    result: TokenData[], cursor: string\n}> => {\n    const params: Record<string, string | number> = {\n        limit,\n        sortBy: sortField || 'holderTotal',\n        sortOrder: sortDirection || 'desc',\n        ...(cursor && {cursor: cursor})\n    };\n\n    try {\n        const response = await sendRequest<KatscanTokenListResponse<TokenData>>({\n            method: 'GET',\n            url: `${katscanApiUrl}/token/tokenlist`,\n            params\n        });\n        return {result: response.tokens, cursor: response.nextCursor}\n        // cursor = response.next;\n    } catch (error) {\n        console.error('Error fetching KRC20 token list:', error);\n        throw new Error(`Failed to fetch token list: ${(error as Record<string, string>).message}`);\n    }\n    // } while (cursor);\n\n\n};\n\n// New function to fetch token operations\nexport const getTokenOperations = async (tick: string, limit = 50, cursor: null | number = null): Promise<TokenListResponse<OpTransactionData[]>> => {\n    try {\n        const params: Record<string, string | number> = {tick, limit: limit.toString()}\n        if (cursor) params['next'] = cursor\n        return sendRequest<TokenListResponse<OpTransactionData[]>>({\n            method: 'GET', url: `${BASE_URL}/krc20/oplist`, params\n        });\n    } catch (error) {\n        console.error('Error fetching token operations:', error);\n        throw error;\n    }\n};\n\n// New function to fetch mint operations\nexport const getMintOperations = async (tick: string, limit = 50, cursor = null): Promise<OpTransactionData[]> => {\n    try {\n        const params: Record<string, string> = {tick, limit: limit.toString(), op: 'mint'}\n        if (cursor) params['next'] = cursor\n        const response = await sendRequest<TokenListResponse<OpTransactionData[]>>({\n            method: 'GET',\n            url: `${BASE_URL}/krc20/oplist`,\n            params\n        });\n        return response.result;\n    } catch (error) {\n        console.error('Error fetching mint operations:', error);\n        throw error;\n    }\n};\n\n// Add this new function to fetch detailed token information\nexport const getDetailedTokenInfo = async (tick: string): Promise<TokenData> => {\n    try {\n        const response = await simpleRequest<ResultResponse<TokenData>>(`${katscanApiUrl}/token/detail/${tick}`);\n        return response.result;\n    } catch (error) {\n        console.error('Error fetching detailed token information:', error);\n        throw error;\n    }\n};\n\n// Add this new function to fetch all mint transactions\n// todo invalid url params / more needed\n// export const getAllMintTransactions = async () => {\n//     const BASE_URL = 'https://katapi.nachowyborski.xyz/api';\n//     let allTransactions = [];\n//     let currentPage = 1;\n//     let hasNextPage = true;\n//\n//     while (hasNextPage) {\n//         try {\n//             const response = await sendRequest({\n//                     method: 'GET',\n//                     url: `${BASE_URL}/transactions`,\n//                     params: {op: 'mint', page: currentPage}\n//                 }\n//             );\n//\n//             const {transactions, pagination} = response.data;\n//             allTransactions = [...allTransactions, ...transactions];\n//\n//             hasNextPage = pagination.hasNextPage;\n//             currentPage++;\n//         } catch (error) {\n//             console.error('Error fetching mint transactions:', error);\n//             throw error;\n//         }\n//     }\n//\n//     return allTransactions;\n// };\n","export const censorTicker = (ticker: string): string => {\n    const offensiveWords: Record<string, string> = {\n        'NIGGA': 'N***A',\n        'NIGGAS': 'N****S',\n        'NIGGER': 'N****R',\n        'RETARD': 'R****D',\n        'FAG': 'F**',\n        'FAGS': 'F**S',\n        'FAGGOT': 'F****T',\n        'DYKE': 'D**E',\n        'DYKES': 'D**ES',\n        'TRANNY': 'T****Y',\n        'SPIC': 'S**C',\n        'SPICS': 'S**CS',\n        'KIKE': 'K**E',\n        'KIKES': 'K***S',\n        'CHINK': 'C***K',\n        'CHINKS': 'C***KS',\n        'GOOK': 'G**K',\n        'GOOKS': 'G**KS',\n        'WOP': 'W**',\n        'WOPS': 'W**S',\n        'TARD': 'T**D'\n    };\n    return offensiveWords[ticker] || ticker;\n};\n"],"names":["_excluded","DivStyledAsH4","divWithClassName","displayName","AlertHeading","React","_ref","ref","className","bsPrefix","as","Component","props","_objectWithoutProperties","useBootstrapPrefix","_jsx","_objectSpread","classNames","AlertLink","Anchor","Alert","uncontrolledProps","_useUncontrolled","useUncontrolled","show","closeLabel","closeVariant","children","variant","onClose","dismissible","transition","Fade","prefix","handleClose","useEventCallback","e","Transition","alert","_jsxs","role","undefined","concat","CloseButton","onClick","unmountOnExit","in","Object","assign","Link","Heading","HolderDistribution","tokenData","tokenHolder","holderDistribution","useMemo","length","label","percentage","holders","decimals","dec","maxSupply","max","groups","total","slice","forEach","holder","index","groupIndex","Math","floor","parseRawNumber","balance","top50Total","reduce","sum","group","otherHoldersTotal","toString","map","DivChart","data","groupLabel","MobileOperationsTable","item","op","LinkWithTooltip","to","hashRev","tooltip","shortenString","from","formatNumber","amt","formatDateTime","mtsAdd","RecentOperations","tokenId","operations","setOperations","operationsCursor","setOperationsCursor","isMobile","useMobile","loadingMore","setLoadingMore","useState","observer","useRef","useEffect","getTokenOperations","then","opsData","result","next","catch","err","console","error","addAlert","fetchOperations","useCallback","async","prevOps","lastOperationElementRef","node","_observer$current","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","_Fragment","style","height","Table","striped","bordered","hover","MobileHolderTable","address","toFixed","TopHolder","holderData","setHolderData","loading","useFetch","url","tick","avoidLoading","defaultValue","List","isLoading","headerElements","gridTemplate","getHeader","header","toUpperCase","minItemHeight","getElement","items","holderTotal","TokenDetailsTokenInfo","socials","getIcon","type","SmallThumbnail","src","katscanStaticUrl","alt","logo","FaImages","Card","Body","Thumbnail","borderRadius","minted","lim","mintTotal","transferTotal","_ref2","target","referrerPolicy","title","titles","mobileTabs","TokenDetail","useParams","setSocials","katscanApiUrl","errorMessage","Error","JSON","parse","LoadingSpinner","jsonLdData","Page","censorTicker","additionalHeaderComponent","JsonLd","SEO","description","keywords","CustomTabs","BASE_URL","getTokenDetails","simpleRequest","limit","arguments","cursor","params","sendRequest","method","getDetailedTokenInfo","ticker"],"sourceRoot":""}